---
- name: "Install pyenv and pipx"
  community.general.homebrew:
    name:
      - "pyenv"
      - "pipx"
    state: "present"

- name: "Add pyenv to shell profile"
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    state: "present"
    prepend_newline: true
    append_newline: true
    marker: "# ==== {mark} ANSIBLE PYENV CONFIG"
    block: |
      if command -v pyenv 1>/dev/null 2>&1; then
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init - bash)"
      fi

- name: "Add pipx to shell profile"
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    state: "present"
    prepend_newline: true
    append_newline: true
    marker: "# ==== {mark} ANSIBLE PIPX CONFIG"
    block: |
      if command -v pipx 1>/dev/null 2>&1; then
          export PATH="$PATH:$HOME/.local/bin"
      fi

- name: "Get installed python versions"
  ansible.builtin.command:
    cmd: "pyenv versions --bare"
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
  register: installed_python_versions
  changed_when: false
  failed_when: false

- name: "Remove unwanted python versions"
  vars:
    major_minor: "{{ item | regex_replace('^([0-9]+\\.[0-9]+).*', '\\1') }}"
  ansible.builtin.command:
    cmd: "pyenv uninstall -f {{ item }}"
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
  loop: "{{ installed_python_versions.stdout_lines | default([]) }}"
  when:
    - installed_python_versions.rc == 0
    - item is regex('^[0-9]+\.[0-9]+')
    - item not in python_versions
    - major_minor not in python_versions
  changed_when: true

- name: "Install python versions"
  ansible.builtin.command:
    cmd: "pyenv install {{ item }}"
  args:
    creates: "{{ ansible_env.HOME }}/.pyenv/versions/{{ item }}*/bin/python"
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
  with_items: "{{ python_versions }}"

- name: "Set global python version"
  ansible.builtin.command:
    cmd: "pyenv global {{ python_global_version }}"
  environment:
    PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
  changed_when: false
